{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isHidden","isReverse","goods","sortBy","selectedValue","showList","setState","sortByName","sortByLength","shouldReverse","reset","this","products","sort","productOne","productTwo","localeCompare","length","filter","product","reverse","className","type","onClick","map","value","onChange","target","_","index","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWWC,EAAb,4MACEC,MAAQ,CACNC,UAAU,EACVC,WAAW,EACXC,MAAOL,EACPM,OAAQ,GACRC,cAAe,GANnB,EASEC,SAAW,WACT,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,UAAWD,EAAMC,cAXvB,EAeEO,WAAa,WACX,EAAKD,UAAS,iBAAO,CACnBH,OAAQ,OACRF,WAAW,OAlBjB,EAsBEO,aAAe,WACb,EAAKF,UAAS,iBAAO,CACnBH,OAAQ,SACRF,WAAW,OAzBjB,EA6BEQ,cAAgB,WACd,EAAKH,UAAS,SAAAP,GAAK,MAAK,CACtBE,WAAYF,EAAME,eA/BxB,EAmCES,MAAQ,WACN,EAAKJ,UAAS,SAACP,GAAD,MAAY,CACxBG,MAAOH,EAAMG,MACbD,WAAW,EACXE,OAAQ,GACRC,cAAe,OAxCrB,4CA4CE,WAAU,IAAD,OACP,EAMIO,KAAKZ,MALPI,EADF,EACEA,OACAH,EAFF,EAEEA,SACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,MACAE,EALF,EAKEA,cAGIQ,EAAW,YAAIV,GAClBW,MAAK,SAACC,EAAYC,GACjB,OAAQZ,GACN,IAAK,OACH,OAAOW,EAAWE,cAAcD,GAElC,IAAK,SACH,OAAOD,EAAWG,OAASF,EAAWE,OAExC,QACE,OAAO,MAGZC,QAAO,SAAAC,GAAO,OAAIA,EAAQF,QAAUb,KAMvC,OAJIH,GACFW,EAASQ,UAIT,qBAAKC,UAAU,MAAf,SACGrB,EAEG,wBACEsB,KAAK,SACLD,UAAU,iCACVE,QAASZ,KAAKN,SAHhB,mBASA,qCACE,sBAAKgB,UAAU,oBAAf,UACE,wBACEA,UAAU,cACVC,KAAK,SACLC,QAASZ,KAAKJ,WAHhB,0BAQA,wBACEe,KAAK,SACLD,UAAU,cACVE,QAASZ,KAAKH,aAHhB,4BAQA,wBACEc,KAAK,SACLD,UAAU,cACVE,QAASZ,KAAKF,cAHhB,qBAQA,wBACEa,KAAK,SACLD,UAAU,iCACVE,QAASZ,KAAKD,MAHhB,sBASF,oBAAIW,UAAU,YAAd,SACGT,EAASY,KAAI,SAAAL,GAAO,OACnB,oBAAIE,UAAU,YAAd,SACGF,GAD4BA,QAMnC,wBACEE,UAAU,4BACVI,MAAOrB,EACPsB,SACE,gBAAGC,EAAH,EAAGA,OAAH,OACE,EAAKrB,SAAS,CACZF,eAAgBuB,EAAOF,SAN/B,SAUGvB,EAAMsB,KAAI,SAACI,EAAGC,GAAJ,OACT,wBAAQJ,MAAOI,EAAQ,EAAvB,SACGA,EAAQ,kBA5I7B,GAAyBC,IAAMC,eCrB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac9e24ed.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isHidden: boolean,\n  isReverse: boolean,\n  goods: string[],\n  sortBy: string,\n  selectedValue: number,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state = {\n    isHidden: true,\n    isReverse: false,\n    goods: goodsFromServer,\n    sortBy: '',\n    selectedValue: 1,\n  };\n\n  showList = () => {\n    this.setState(state => ({\n      isHidden: !state.isHidden,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState(() => ({\n      sortBy: 'name',\n      isReverse: false,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortBy: 'length',\n      isReverse: false,\n    }));\n  };\n\n  shouldReverse = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  reset = () => {\n    this.setState((state) => ({\n      goods: state.goods,\n      isReverse: false,\n      sortBy: '',\n      selectedValue: 0,\n    }));\n  };\n\n  render() {\n    const {\n      sortBy,\n      isHidden,\n      isReverse,\n      goods,\n      selectedValue,\n    } = this.state;\n\n    const products = [...goods]\n      .sort((productOne, productTwo) => {\n        switch (sortBy) {\n          case 'name':\n            return productOne.localeCompare(productTwo);\n\n          case 'length':\n            return productOne.length - productTwo.length;\n\n          default:\n            return 0;\n        }\n      })\n      .filter(product => product.length >= selectedValue);\n\n    if (isReverse) {\n      products.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {isHidden\n          ? (\n            <button\n              type=\"button\"\n              className=\"App__button App__button--start\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <div className=\"App__button-panel\">\n                <button\n                  className=\"App__button\"\n                  type=\"button\"\n                  onClick={this.sortByName}\n                >\n                  Sort by name\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"App__button\"\n                  onClick={this.sortByLength}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"App__button\"\n                  onClick={this.shouldReverse}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"App__button App__button--reset\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ul className=\"App__list\">\n                {products.map(product => (\n                  <li className=\"App__card\" key={product}>\n                    {product}\n                  </li>\n                ))}\n              </ul>\n\n              <select\n                className=\"App__word-length-selector\"\n                value={selectedValue}\n                onChange={\n                  ({ target }) => (\n                    this.setState({\n                      selectedValue: +target.value,\n                    }))\n                }\n              >\n                {goods.map((_, index) => (\n                  <option value={index + 1}>\n                    {index + 1}\n                  </option>\n                ))}\n              </select>\n            </>\n\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}